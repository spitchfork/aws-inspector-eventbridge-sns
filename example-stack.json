{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "KeyName": {
      "Description": "Key pair name to access ec2 instances.",
      "Type": "String"
    },
    "EmailSubscriptionEndpoint": {
      "Description": "Email address to be used for Inspector vulnerability finding events.",
      "Type": "String"
    },
    "AdminIP": {
      "Description": "Source Admin (e.g. home/office) IP in CIDR format to limit traffic ingress.",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/32."
    },
    "Owner": {
      "Description": "Owner of the AWS resources.",
      "Type": "String"
    },
    "AMI": {
      "Description": "Amazon Image Id in eu-west-2",
      "Type": "String",
      "Default": "ami-055c6079e3f65e9ac"
    },
    "InstanceType": {
      "Description": "Instance type (default: free tier t2.micro).",
      "Type": "String",
      "Default": "t2.micro"
    },
    "AssociatePublicIP": {
      "Description": "Associate public IP.",
      "Type": "String",
      "Default": "false"
    },
    "UserData": {
      "Description": "Commands to run on instance creation.",
      "Type": "String",
      "Default": "#!/bin/bash\nyum update -y\nyum install -y httpd-2.4.33-2.amzn2.0.2\nsystemctl start httpd"
    }
  },
  "Resources": {
    "TestVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Inspector Test VPC"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          }
        ]
      }
    },
    "Subnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "TestVPC"
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": "false",
        "AvailabilityZone": "eu-west-2a",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Inspector Test Subnet 1"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          }
        ]
      }
    },
    "TestIG": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Inspector Test IG"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          }
        ]
      }
    },
    "VPCIGAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "TestVPC"
        },
        "InternetGatewayId": {
          "Ref": "TestIG"
        }
      }
    },
    "PubRT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "TestVPC"
        }
      }
    },
    "PubRTRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PubRT"
        },
        "GatewayId": {
          "Ref": "TestIG"
        },
        "DestinationCidrBlock": "0.0.0.0/0"
      }
    },
    "Subnet1RTAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PubRT"
        },
        "SubnetId": {
          "Ref": "Subnet1"
        }
      }
    },
    "Ec2SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "Ec2ClientSG",
        "GroupDescription": "Allow ec2 SSH ingress.",
        "VpcId": {
          "Ref": "TestVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": {
              "Ref": "AdminIP"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "EC2 Client SG"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          }
        ]
      }
    },
    "VulnerableEc2Srv1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "AMI"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Ref": "UserData"
          }
        },
        "IamInstanceProfile": {
          "Ref": "VulnerableEc2InstanceProfile"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "DeleteOnTermination": "true",
              "VolumeSize": "8"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Ref": "Subnet1"
            },
            "AssociatePublicIpAddress": {
              "Ref": "AssociatePublicIP"
            },
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "Ec2SG"
              }
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Example httpd Vulnerable Server"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          }
        ]
      }
    },
    "VulnerableEc2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          "AmazonSSMRoleForInstancesQuickSetup"
        ]
      }
    },
    "InspectorFindingTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "inspector-finding-topic"
      }
    },
    "InspectorFindingSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "InspectorFindingTopic"
        },
        "Endpoint": {
          "Ref": "EmailSubscriptionEndpoint"
        },
        "Protocol": "email"
      }
    },
    "EventbridgeInspectorRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Route Inspector finding event to SNS.",
        "EventPattern": {
          "source": [
            "aws.inspector2"
          ],
          "detail-type": [
            "Inspector2 Finding"
          ]},
        "Targets": [{
          "Arn" : {"Ref":  "InspectorFindingTopic"},
          "Id" : "inspector-finding-topic"}
        ]
      }
    }
  }
}